{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/erlang:26.1.2.0.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "erlang:26.1.2.0.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 23,
        "Failures": 4,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -xe \t\u0026\u0026 REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\" \t\u0026\u0026 REBAR3_DOWNLOAD_SHA256=\"53ed7f294a8b8fb4d7d75988c69194943831c104d39832a1fa30307b1a8593de\" \t\u0026\u0026 mkdir -p /usr/src/rebar3-src \t\u0026\u0026 curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \t\u0026\u0026 echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \t\u0026\u0026 tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \t\u0026\u0026 rm rebar3-src.tar.gz \t\u0026\u0026 cd /usr/src/rebar3-src \t\u0026\u0026 HOME=$PWD ./bootstrap \t\u0026\u0026 install -v ./rebar3 /usr/local/bin/ \t\u0026\u0026 rm -rf /usr/src/rebar3-src'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 59,
            "EndLine": 70,
            "Code": {
              "Lines": [
                {
                  "Number": 59,
                  "Content": "RUN set -xe \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 60,
                  "Content": "\t\u0026\u0026 REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 61,
                  "Content": "\t\u0026\u0026 REBAR3_DOWNLOAD_SHA256=\"53ed7f294a8b8fb4d7d75988c69194943831c104d39832a1fa30307b1a8593de\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 62,
                  "Content": "\t\u0026\u0026 mkdir -p /usr/src/rebar3-src \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 63,
                  "Content": "\t\u0026\u0026 curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 64,
                  "Content": "\t\u0026\u0026 echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 65,
                  "Content": "\t\u0026\u0026 tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 66,
                  "Content": "\t\u0026\u0026 rm rebar3-src.tar.gz \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 67,
                  "Content": "\t\u0026\u0026 cd /usr/src/rebar3-src \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 68,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -xe \t\u0026\u0026 REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\" \t\u0026\u0026 REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\" \t\u0026\u0026 mkdir -p /usr/src/rebar-src \t\u0026\u0026 curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\" \t\u0026\u0026 echo \"$REBAR_DOWNLOAD_SHA256 rebar-src.tar.gz\" | sha256sum -c - \t\u0026\u0026 tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1 \t\u0026\u0026 rm rebar-src.tar.gz \t\u0026\u0026 cd /usr/src/rebar-src \t\u0026\u0026 ./bootstrap \t\u0026\u0026 install -v ./rebar /usr/local/bin/ \t\u0026\u0026 rm -rf /usr/src/rebar-src'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 46,
            "EndLine": 57,
            "Code": {
              "Lines": [
                {
                  "Number": 46,
                  "Content": "RUN set -xe \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 47,
                  "Content": "\t\u0026\u0026 REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 48,
                  "Content": "\t\u0026\u0026 REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 49,
                  "Content": "\t\u0026\u0026 mkdir -p /usr/src/rebar-src \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 50,
                  "Content": "\t\u0026\u0026 curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 51,
                  "Content": "\t\u0026\u0026 echo \"$REBAR_DOWNLOAD_SHA256 rebar-src.tar.gz\" | sha256sum -c - \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 52,
                  "Content": "\t\u0026\u0026 tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 53,
                  "Content": "\t\u0026\u0026 rm rebar-src.tar.gz \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 54,
                  "Content": "\t\u0026\u0026 cd /usr/src/rebar-src \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 55,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
