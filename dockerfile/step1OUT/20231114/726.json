{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/swift:5.9.1-rhel-ubi9-slim.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "swift:5.9.1-rhel-ubi9-slim.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 22,
        "Failures": 4,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS001",
          "AVDID": "AVD-DS-0001",
          "Title": "':latest' tag used",
          "Description": "When using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated.",
          "Message": "Specify a tag in the 'FROM' statement for image 'redhat/ubi9'",
          "Namespace": "builtin.dockerfile.DS001",
          "Query": "data.builtin.dockerfile.DS001.deny",
          "Resolution": "Add a tag to the image in the 'FROM' statement",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds001",
          "References": [
            "https://avd.aquasec.com/misconfig/ds001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 1,
            "EndLine": 1,
            "Code": {
              "Lines": [
                {
                  "Number": 1,
                  "Content": "FROM redhat/ubi9",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS015",
          "AVDID": "AVD-DS-0015",
          "Title": "'yum clean all' missing",
          "Description": "You should use 'yum clean all' after using a 'yum install' command to clean package cached data and reduce image size.",
          "Message": "'yum clean all' is missed: set -e;     ARCH_NAME=\"$(rpm --eval '%{_arch}')\";     url=;     case \"${ARCH_NAME##*-}\" in         'x86_64')             OS_ARCH_SUFFIX='';             ;;         'aarch64')             OS_ARCH_SUFFIX='-aarch64';             ;;         *) echo \u003e\u00262 \"error: unsupported architecture: '$ARCH_NAME'\"; exit 1 ;;     esac;     SWIFT_WEBDIR=\"$SWIFT_WEBROOT/$SWIFT_BRANCH/$(echo $SWIFT_PLATFORM | tr -d .)$OS_ARCH_SUFFIX\"     \u0026\u0026 SWIFT_BIN_URL=\"$SWIFT_WEBDIR/$SWIFT_VERSION/$SWIFT_VERSION-$SWIFT_PLATFORM$OS_ARCH_SUFFIX.tar.gz\"     \u0026\u0026 SWIFT_SIG_URL=\"$SWIFT_BIN_URL.sig\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 curl -fsSL \"$SWIFT_BIN_URL\" -o swift.tar.gz \"$SWIFT_SIG_URL\" -o swift.tar.gz.sig     \u0026\u0026 gpg --batch --quiet --keyserver keyserver.ubuntu.com --recv-keys \"$SWIFT_SIGNING_KEY\"     \u0026\u0026 gpg --batch --verify swift.tar.gz.sig swift.tar.gz     \u0026\u0026 yum -y install tar gzip     \u0026\u0026 tar -xzf swift.tar.gz --directory / --strip-components=1         $SWIFT_VERSION-$SWIFT_PLATFORM$OS_ARCH_SUFFIX/usr/lib/swift/linux         $SWIFT_VERSION-$SWIFT_PLATFORM$OS_ARCH_SUFFIX/usr/libexec/swift/linux     \u0026\u0026 chmod -R o+r /usr/lib/swift /usr/libexec/swift     \u0026\u0026 rm -rf \"$GNUPGHOME\" swift.tar.gz.sig swift.tar.gz",
          "Namespace": "builtin.dockerfile.DS015",
          "Query": "data.builtin.dockerfile.DS015.deny",
          "Resolution": "Add 'yum clean all' to Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds015",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run",
            "https://avd.aquasec.com/misconfig/ds015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 22,
            "EndLine": 48,
            "Code": {
              "Lines": [
                {
                  "Number": 22,
                  "Content": "RUN set -e; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 23,
                  "Content": "    ARCH_NAME=\"$(rpm --eval '%{_arch}')\"; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 24,
                  "Content": "    url=; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 25,
                  "Content": "    case \"${ARCH_NAME##*-}\" in \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "        'x86_64') \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "            OS_ARCH_SUFFIX=''; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "            ;; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "        'aarch64') \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "            OS_ARCH_SUFFIX='-aarch64'; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 31,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
