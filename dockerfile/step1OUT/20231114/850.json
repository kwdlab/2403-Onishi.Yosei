{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/haxe:4.1.5-alpine3.15.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "haxe:4.1.5-alpine3.15.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 23,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -ex \t\u0026\u0026 apk add --no-cache --virtual .fetch-deps \t\ttar \t\tgit \t\t\u0026\u0026 wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-3-0/neko-2.3.0.tar.gz\" \t\u0026\u0026 echo \"850e7e317bdaf24ed652efeff89c1cb21380ca19f20e68a296c84f6bad4ee995 *neko.tar.gz\" | sha256sum -c - \t\u0026\u0026 mkdir -p /usr/src/neko \t\u0026\u0026 tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \t\u0026\u0026 rm neko.tar.gz \t\u0026\u0026 apk add --no-cache --virtual .neko-build-deps \t\tapache2-dev \t\tcmake \t\tgc-dev \t\tgcc \t\tgtk+2.0-dev \t\tlibc-dev \t\tlinux-headers \t\tmariadb-dev \t\tmbedtls-dev \t\tninja \t\tsqlite-dev \t\u0026\u0026 cd /usr/src/neko \t\u0026\u0026 cmake -GNinja -DNEKO_JIT_DISABLE=ON -DRELOCATABLE=OFF -DRUN_LDCONFIG=OFF . \t\u0026\u0026 ninja \t\u0026\u0026 ninja install \t\t\u0026\u0026 git clone --recursive --depth 1 --branch 4.1.5 \"https://github.com/HaxeFoundation/haxe.git\" /usr/src/haxe \t\u0026\u0026 cd /usr/src/haxe \t\u0026\u0026 mkdir -p $HAXE_STD_PATH \t\u0026\u0026 cp -r std/* $HAXE_STD_PATH \t\u0026\u0026 apk add --no-cache --virtual .haxe-build-deps \t\tpcre-dev \t\tzlib-dev \t\tmbedtls-dev \t\tmake \t\topam \t\taspcud \t\tm4 \t\tunzip \t\tpatch \t\tmusl-dev \t\tperl-string-shellquote \t\tperl-ipc-system-simple \t\tocaml-compiler-libs \t\tocaml-ocamldoc \t\u0026\u0026 opam init --compiler=4.11.0 --disable-sandboxing \t\u0026\u0026 eval $(opam env) \t\u0026\u0026 opam pin add haxe . --no-action \t\u0026\u0026 opam pin add extlib 1.7.7 --no-action \t\u0026\u0026 opam install haxe --deps-only --yes \t\t\t\u0026\u0026 make \t\u0026\u0026 eval $(opam env --revert) \t\u0026\u0026 mkdir -p /usr/local/bin \t\u0026\u0026 cp haxe haxelib /usr/local/bin \t\u0026\u0026 mkdir -p /haxelib \t\u0026\u0026 cd / \u0026\u0026 haxelib setup /haxelib \t\t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .haxe-rundeps $runDeps \t\u0026\u0026 apk del .fetch-deps .neko-build-deps .haxe-build-deps \t\u0026\u0026 rm -rf ~/.opam \t\u0026\u0026 rm -rf /usr/src/neko /usr/src/haxe'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 20,
            "EndLine": 90,
            "Code": {
              "Lines": [
                {
                  "Number": 20,
                  "Content": "RUN set -ex \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 21,
                  "Content": "\t\u0026\u0026 apk add --no-cache --virtual .fetch-deps \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 22,
                  "Content": "\t\ttar \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 23,
                  "Content": "\t\tgit \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 24,
                  "Content": "\t\\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 25,
                  "Content": "\t\u0026\u0026 wget -O neko.tar.gz \"https://github.com/HaxeFoundation/neko/archive/v2-3-0/neko-2.3.0.tar.gz\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "\t\u0026\u0026 echo \"850e7e317bdaf24ed652efeff89c1cb21380ca19f20e68a296c84f6bad4ee995 *neko.tar.gz\" | sha256sum -c - \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "\t\u0026\u0026 mkdir -p /usr/src/neko \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "\t\u0026\u0026 tar -xC /usr/src/neko --strip-components=1 -f neko.tar.gz \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 29,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
