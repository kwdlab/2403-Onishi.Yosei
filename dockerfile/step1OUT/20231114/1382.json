{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/couchbase:7.1.6.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "couchbase:7.1.6.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 23,
        "Failures": 5,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'set -ex     \u0026\u0026  if [ ! -e /opt/couchbase/bin/curl.real ]; then             ${UPDATE_COMMAND};             apt-get install -y chrpath;             chrpath -r '$ORIGIN/../lib' /opt/couchbase/bin/curl;             apt-get remove -y chrpath;             apt-get autoremove -y;             ${CLEANUP_COMMAND};         fi'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 77,
            "EndLine": 85,
            "Code": {
              "Lines": [
                {
                  "Number": 77,
                  "Content": "RUN set -ex \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 78,
                  "Content": "    \u0026\u0026  if [ ! -e /opt/couchbase/bin/curl.real ]; then \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 79,
                  "Content": "            ${UPDATE_COMMAND}; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 80,
                  "Content": "            apt-get install -y chrpath; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 81,
                  "Content": "            chrpath -r '$ORIGIN/../lib' /opt/couchbase/bin/curl; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 82,
                  "Content": "            apt-get remove -y chrpath; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 83,
                  "Content": "            apt-get autoremove -y; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 84,
                  "Content": "            ${CLEANUP_COMMAND}; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 85,
                  "Content": "        fi",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'set -x     \u0026\u0026 ${UPDATE_COMMAND}     \u0026\u0026 apt-get install -y -q wget tzdata       lsof lshw sysstat net-tools numactl bzip2 runit     \u0026\u0026 ${CLEANUP_COMMAND}'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 18,
            "EndLine": 22,
            "Code": {
              "Lines": [
                {
                  "Number": 18,
                  "Content": "RUN set -x \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 19,
                  "Content": "    \u0026\u0026 ${UPDATE_COMMAND} \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 20,
                  "Content": "    \u0026\u0026 apt-get install -y -q wget tzdata \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 21,
                  "Content": "      lsof lshw sysstat net-tools numactl bzip2 runit \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 22,
                  "Content": "    \u0026\u0026 ${CLEANUP_COMMAND}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'set -x     \u0026\u0026 export INSTALL_DONT_START_SERVER=1     \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"     \u0026\u0026 case \"${dpkgArch}\" in          'arm64')            CB_SHA256=d4462e7228c372f761bd83f96fa63a7211544df885c2d2e065202ff663dad6f9            ;;          'amd64')            CB_SHA256=abf410a1f97dd14171cd260d4abb853be003db5ec0a44c8324c846068eb90ce7            ;;        esac     \u0026\u0026 CB_PACKAGE=$(echo ${CB_PACKAGE} | sed -e \"s/@@ARCH@@/${dpkgArch}/\")     \u0026\u0026 wget -N --no-verbose $CB_RELEASE_URL/$CB_PACKAGE     \u0026\u0026 { ${CB_SKIP_CHECKSUM} || echo \"$CB_SHA256  $CB_PACKAGE\" | sha256sum -c - ; }     \u0026\u0026 ${UPDATE_COMMAND}     \u0026\u0026 apt-get install -y ./$CB_PACKAGE     \u0026\u0026 rm -f ./$CB_PACKAGE     \u0026\u0026 ${CLEANUP_COMMAND}     \u0026\u0026 rm -rf /tmp/* /var/tmp/*'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 34,
            "EndLine": 52,
            "Code": {
              "Lines": [
                {
                  "Number": 34,
                  "Content": "RUN set -x \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "    \u0026\u0026 export INSTALL_DONT_START_SERVER=1 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "    \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 37,
                  "Content": "    \u0026\u0026 case \"${dpkgArch}\" in \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 38,
                  "Content": "         'arm64') \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 39,
                  "Content": "           CB_SHA256=d4462e7228c372f761bd83f96fa63a7211544df885c2d2e065202ff663dad6f9 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 40,
                  "Content": "           ;; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 41,
                  "Content": "         'amd64') \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 42,
                  "Content": "           CB_SHA256=abf410a1f97dd14171cd260d4abb853be003db5ec0a44c8324c846068eb90ce7 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 43,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
