{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/eclipse-mosquitto:2.0.18.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "eclipse-mosquitto:2.0.18.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 23,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -x \u0026\u0026     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev \u0026\u0026     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz \u0026\u0026     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - \u0026\u0026     mkdir -p /build/lws \u0026\u0026     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws \u0026\u0026     rm /tmp/lws.tar.gz \u0026\u0026     cd /build/lws \u0026\u0026     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF \u0026\u0026     make -j \"$(nproc)\" \u0026\u0026     rm -rf /root/.cmake \u0026\u0026     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz \u0026\u0026     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - \u0026\u0026     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc \u0026\u0026     export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break;     done;     test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz \u0026\u0026     gpgconf --kill all \u0026\u0026     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc \u0026\u0026     mkdir -p /build/mosq \u0026\u0026     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq \u0026\u0026     rm /tmp/mosq.tar.gz \u0026\u0026     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary \u0026\u0026     addgroup -S -g 1883 mosquitto 2\u003e/dev/null \u0026\u0026     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2\u003e/dev/null \u0026\u0026     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log \u0026\u0026     install -d /usr/sbin/ \u0026\u0026     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub \u0026\u0026     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr \u0026\u0026     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub \u0026\u0026     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 \u0026\u0026     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto \u0026\u0026     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl \u0026\u0026     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd \u0026\u0026     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so \u0026\u0026     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf \u0026\u0026     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE \u0026\u0026     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 \u0026\u0026     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 \u0026\u0026     chown -R mosquitto:mosquitto /mosquitto \u0026\u0026     apk --no-cache add         ca-certificates         cjson         libressl \u0026\u0026     apk del build-deps \u0026\u0026     rm -rf /build'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 12,
            "EndLine": 97,
            "Code": {
              "Lines": [
                {
                  "Number": 12,
                  "Content": "RUN set -x \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 13,
                  "Content": "    apk --no-cache add --virtual build-deps \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 14,
                  "Content": "        build-base \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 15,
                  "Content": "        cmake \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 16,
                  "Content": "        cjson-dev \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 17,
                  "Content": "        gnupg \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 18,
                  "Content": "        libressl-dev \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 19,
                  "Content": "        linux-headers \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 20,
                  "Content": "        util-linux-dev \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 21,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
