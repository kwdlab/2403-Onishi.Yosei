{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/arangodb:3.10.11.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "arangodb:3.10.11.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 22,
        "Failures": 4,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS002",
          "AVDID": "AVD-DS-0002",
          "Title": "Image user should not be 'root'",
          "Description": "Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.",
          "Message": "Specify at least 1 USER command in Dockerfile with non-root user as argument",
          "Namespace": "builtin.dockerfile.DS002",
          "Query": "data.builtin.dockerfile.DS002.deny",
          "Resolution": "Add 'USER \u003cnon root user name\u003e' line to the Dockerfile",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds002",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds002"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'apk add --no-cache gnupg pwgen binutils numactl numactl-tools nodejs yarn \u0026\u0026     yarn global add foxx-cli@2.1.1 \u0026\u0026     apk del yarn \u0026\u0026     gpg --batch --keyserver keys.openpgp.org --recv-keys CD8CB0F1E0AD5B52E93F41E7EA93F5E56E751E9B \u0026\u0026     mkdir /docker-entrypoint-initdb.d \u0026\u0026     cd /tmp                                \u0026\u0026     arch=\"$(apk --print-arch)\"             \u0026\u0026     case \"$arch\" in                                   x86_64)  dpkgArch='amd64'          ;;         aarch64) dpkgArch='arm64'          ;;         *) echo \u003e\u00262 \"unsupported: $arch\" \u0026\u0026 exit 1 ;;     esac                                   \u0026\u0026     ARANGO_URL=\"https://download.arangodb.com/arangodb310/DEBIAN/$dpkgArch\" \u0026\u0026     ARANGO_PACKAGE=\"arangodb3_${ARANGO_VERSION}-1_${dpkgArch}.deb\" \u0026\u0026     ARANGO_PACKAGE_URL=\"${ARANGO_URL}/${ARANGO_PACKAGE}\" \u0026\u0026     ARANGO_SIGNATURE_URL=\"${ARANGO_PACKAGE_URL}.asc\" \u0026\u0026     wget ${ARANGO_SIGNATURE_URL}           \u0026\u0026     wget ${ARANGO_PACKAGE_URL}             \u0026\u0026     gpg --verify ${ARANGO_PACKAGE}.asc     \u0026\u0026     ar x ${ARANGO_PACKAGE} data.tar.gz     \u0026\u0026     tar -C / -x -z -f data.tar.gz          \u0026\u0026     sed -ri         -e 's!127\\.0\\.0\\.1!0.0.0.0!g'         -e 's!^(file\\s*=\\s*).*!\\1 -!'         -e 's!^\\s*uid\\s*=.*!!'         /etc/arangodb3/arangod.conf        \u0026\u0026     chgrp -R 0 /var/lib/arangodb3 /var/lib/arangodb3-apps \u0026\u0026     chmod -R 775 /var/lib/arangodb3 /var/lib/arangodb3-apps \u0026\u0026     rm -f /usr/bin/foxx \u0026\u0026     rm -f ${ARANGO_PACKAGE}* data.tar.gz \u0026\u0026     apk del gnupg'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 10,
            "EndLine": 40,
            "Code": {
              "Lines": [
                {
                  "Number": 10,
                  "Content": "RUN apk add --no-cache gnupg pwgen binutils numactl numactl-tools nodejs yarn \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 11,
                  "Content": "    yarn global add foxx-cli@2.1.1 \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 12,
                  "Content": "    apk del yarn \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 13,
                  "Content": "    gpg --batch --keyserver keys.openpgp.org --recv-keys CD8CB0F1E0AD5B52E93F41E7EA93F5E56E751E9B \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 14,
                  "Content": "    mkdir /docker-entrypoint-initdb.d \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 15,
                  "Content": "    cd /tmp                                \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 16,
                  "Content": "    arch=\"$(apk --print-arch)\"             \u0026\u0026 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 17,
                  "Content": "    case \"$arch\" in                           \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 18,
                  "Content": "        x86_64)  dpkgArch='amd64'          ;; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 19,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS022",
          "AVDID": "AVD-DS-0022",
          "Title": "Deprecated MAINTAINER used",
          "Description": "MAINTAINER has been deprecated since Docker 1.13.0.",
          "Message": "MAINTAINER should not be used: 'MAINTAINER Frank Celler \u003cinfo@arangodb.com\u003e'",
          "Namespace": "builtin.dockerfile.DS022",
          "Query": "data.builtin.dockerfile.DS022.deny",
          "Resolution": "Use LABEL instead of MAINTAINER",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds022",
          "References": [
            "https://docs.docker.com/engine/deprecated/#maintainer-in-dockerfile",
            "https://avd.aquasec.com/misconfig/ds022"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 2,
            "EndLine": 2,
            "Code": {
              "Lines": [
                {
                  "Number": 2,
                  "Content": "MAINTAINER Frank Celler \u003cinfo@arangodb.com\u003e",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
