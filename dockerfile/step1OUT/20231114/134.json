{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/rocket.chat:6.2.12.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "rocket.chat:6.2.12.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 24,
        "Failures": 2,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -eux   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends fontconfig   \u0026\u0026 aptMark=\"$(apt-mark showmanual)\"   \u0026\u0026 apt-get install -y --no-install-recommends g++ make python ca-certificates curl gnupg   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 0E163286C20D07B9787EBE9FD7F9D0414FD08104   \u0026\u0026 curl -fSL \"https://releases.rocket.chat/${RC_VERSION}/download\" -o rocket.chat.tgz   \u0026\u0026 curl -fSL \"https://releases.rocket.chat/${RC_VERSION}/asc\" -o rocket.chat.tgz.asc   \u0026\u0026 gpg --batch --verify rocket.chat.tgz.asc rocket.chat.tgz   \u0026\u0026 tar zxf rocket.chat.tgz   \u0026\u0026 rm rocket.chat.tgz rocket.chat.tgz.asc   \u0026\u0026 cd bundle/programs/server   \u0026\u0026 npm install   \u0026\u0026 apt-mark auto '.*' \u003e /dev/null   \u0026\u0026 apt-mark manual $aptMark \u003e /dev/null   \u0026\u0026 find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=\u003e/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual   \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false   \u0026\u0026 npm cache clear --force   \u0026\u0026 chown -R rocketchat:rocketchat /app'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 55,
            "EndLine": 81,
            "Code": {
              "Lines": [
                {
                  "Number": 55,
                  "Content": "RUN set -eux \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 56,
                  "Content": "  \u0026\u0026 apt-get update \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 57,
                  "Content": "  \u0026\u0026 apt-get install -y --no-install-recommends fontconfig \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 58,
                  "Content": "  \u0026\u0026 aptMark=\"$(apt-mark showmanual)\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 59,
                  "Content": "  \u0026\u0026 apt-get install -y --no-install-recommends g++ make python ca-certificates curl gnupg \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 60,
                  "Content": "  \u0026\u0026 rm -rf /var/lib/apt/lists/* \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 61,
                  "Content": "  # gpg: key 4FD08104: public key \"Rocket.Chat Buildmaster \u003cbuildmaster@rocket.chat\u003e\" imported",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 62,
                  "Content": "  \u0026\u0026 gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 0E163286C20D07B9787EBE9FD7F9D0414FD08104 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 63,
                  "Content": "  \u0026\u0026 curl -fSL \"https://releases.rocket.chat/${RC_VERSION}/download\" -o rocket.chat.tgz \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 64,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
