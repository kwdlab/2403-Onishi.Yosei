{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/lightstreamer:7.3.3.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "lightstreamer:7.3.3.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 23,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'set -ex;         mkdir /lightstreamer \u0026\u0026 cd /lightstreamer         \u0026\u0026 curl -fSL -o Lightstreamer.tar.gz ${LIGHTSTREAMER_URL_DOWNLOAD}         \u0026\u0026 curl -fSL -o Lightstreamer.tar.gz.asc ${LIGHTSTREAMER_URL_DOWNLOAD}.asc         \u0026\u0026 gpg --batch --verify Lightstreamer.tar.gz.asc Lightstreamer.tar.gz         \u0026\u0026 tar -xvf Lightstreamer.tar.gz --strip-components=1         \u0026\u0026 sed -i -e 's/\u003cappender-ref ref=\"LSDailyRolling\" \\/\u003e/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/'                   -e '/\u003clogger name=\"LightstreamerLogger.init/,+2s/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/\u003c!-- \u003cappender-ref ref=\"LSConsole\" \\/\u003e --\u003e/'                   -e '/\u003clogger name=\"LightstreamerLogger.license/,+2s/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/\u003c!-- \u003cappender-ref ref=\"LSConsole\" \\/\u003e --\u003e/'                   -e '/\u003clogger name=\"LightstreamerProxyAdapters/,+2s/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/\u003c!-- \u003cappender-ref ref=\"LSConsole\" \\/\u003e --\u003e/'                   conf/lightstreamer_log_conf.xml         \u0026\u0026 groupadd -r -g 10000 lightstreamer         \u0026\u0026 useradd --no-log-init -r -g lightstreamer -u 10000 lightstreamer         \u0026\u0026 chown -R lightstreamer:lightstreamer ../lightstreamer         \u0026\u0026 rm Lightstreamer.tar.gz Lightstreamer.tar.gz.asc'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 19,
            "EndLine": 37,
            "Code": {
              "Lines": [
                {
                  "Number": 19,
                  "Content": "RUN set -ex; \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 20,
                  "Content": "        mkdir /lightstreamer \u0026\u0026 cd /lightstreamer \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 21,
                  "Content": "        \u0026\u0026 curl -fSL -o Lightstreamer.tar.gz ${LIGHTSTREAMER_URL_DOWNLOAD} \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 22,
                  "Content": "        \u0026\u0026 curl -fSL -o Lightstreamer.tar.gz.asc ${LIGHTSTREAMER_URL_DOWNLOAD}.asc \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 23,
                  "Content": "        \u0026\u0026 gpg --batch --verify Lightstreamer.tar.gz.asc Lightstreamer.tar.gz \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 24,
                  "Content": "        \u0026\u0026 tar -xvf Lightstreamer.tar.gz --strip-components=1 \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 25,
                  "Content": "# Adjust the logging configuration in order to log only on standard output",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "        \u0026\u0026 sed -i -e 's/\u003cappender-ref ref=\"LSDailyRolling\" \\/\u003e/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/' \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "                  -e '/\u003clogger name=\"LightstreamerLogger.init/,+2s/\u003cappender-ref ref=\"LSConsole\" \\/\u003e/\u003c!-- \u003cappender-ref ref=\"LSConsole\" \\/\u003e --\u003e/' \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 28,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS029",
          "AVDID": "AVD-DS-0029",
          "Title": "'apt-get' missing '--no-install-recommends'",
          "Description": "'apt-get' install should use '--no-install-recommends' to minimize image size.",
          "Message": "'--no-install-recommends' flag is missed: 'apt-get -y update         \u0026\u0026 apt-get -y install gnupg         \u0026\u0026 rm -rf /var/lib/apt/lists/*'",
          "Namespace": "builtin.dockerfile.DS029",
          "Query": "data.builtin.dockerfile.DS029.deny",
          "Resolution": "Add '--no-install-recommends' flag to 'apt-get'",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds029",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",
            "https://avd.aquasec.com/misconfig/ds029"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 7,
            "EndLine": 9,
            "Code": {
              "Lines": [
                {
                  "Number": 7,
                  "Content": "RUN apt-get -y update \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 8,
                  "Content": "        \u0026\u0026 apt-get -y install gnupg \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 9,
                  "Content": "        \u0026\u0026 rm -rf /var/lib/apt/lists/*",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
