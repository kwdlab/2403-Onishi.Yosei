{
  "SchemaVersion": 2,
  "ArtifactName": "dockerfile/20231114/fluentd:v1.16.2-debian-1.1.Dockerfile",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "fluentd:v1.16.2-debian-1.1.Dockerfile",
      "Class": "config",
      "Type": "dockerfile",
      "MisconfSummary": {
        "Successes": 24,
        "Failures": 2,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS013",
          "AVDID": "AVD-DS-0013",
          "Title": "'RUN cd ...' to change directory",
          "Description": "Use WORKDIR instead of proliferating instructions like 'RUN cd â€¦ \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.",
          "Message": "RUN should not be used to change directory: 'apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends             ca-certificates  \u0026\u0026 buildDeps=\"       make gcc g++ libc-dev       wget bzip2 gnupg dirmngr     \"  \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps  \u0026\u0026 echo 'gem: --no-document' \u003e\u003e /etc/gemrc  \u0026\u0026 gem install oj -v 3.16.1  \u0026\u0026 gem install json -v 2.6.3  \u0026\u0026 gem install rexml -v 3.2.6  \u0026\u0026 gem install async -v 1.31.0  \u0026\u0026 gem install async-http -v 0.60.2 \u0026\u0026 gem install uri -v 0.12.2  \u0026\u0026 gem install fluentd -v 1.16.2  \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"  \u0026\u0026 wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch\"  \u0026\u0026 wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5  \u0026\u0026 gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini  \u0026\u0026 rm -r /usr/local/bin/tini.asc  \u0026\u0026 chmod +x /usr/local/bin/tini  \u0026\u0026 tini -h  \u0026\u0026 wget -O /tmp/jemalloc-5.3.0.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2  \u0026\u0026 cd /tmp \u0026\u0026 tar -xjf jemalloc-5.3.0.tar.bz2 \u0026\u0026 cd jemalloc-5.3.0/  \u0026\u0026 (echo \"je_cv_madv_free=no\" \u003e config.cache) \u0026\u0026 ./configure -C \u0026\u0026 make  \u0026\u0026 mv lib/libjemalloc.so.2 /usr/lib  \u0026\u0026 apt-get purge -y --auto-remove                   -o APT::AutoRemove::RecommendsImportant=false                   $buildDeps  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem /usr/lib/ruby/gems/3.*/gems/fluentd-*/test'. Use 'WORKDIR' statement instead.",
          "Namespace": "builtin.dockerfile.DS013",
          "Query": "data.builtin.dockerfile.DS013.deny",
          "Resolution": "Use WORKDIR to change directory",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds013",
          "References": [
            "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir",
            "https://avd.aquasec.com/misconfig/ds013"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "StartLine": 12,
            "EndLine": 48,
            "Code": {
              "Lines": [
                {
                  "Number": 12,
                  "Content": "RUN apt-get update \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 13,
                  "Content": " \u0026\u0026 apt-get install -y --no-install-recommends \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 14,
                  "Content": "            ca-certificates \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 15,
                  "Content": " \u0026\u0026 buildDeps=\" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 16,
                  "Content": "      make gcc g++ libc-dev \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 17,
                  "Content": "      wget bzip2 gnupg dirmngr \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 18,
                  "Content": "    \" \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 19,
                  "Content": " \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 20,
                  "Content": " \u0026\u0026 echo 'gem: --no-document' \u003e\u003e /etc/gemrc \\",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 21,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Dockerfile Security Check",
          "ID": "DS026",
          "AVDID": "AVD-DS-0026",
          "Title": "No HEALTHCHECK defined",
          "Description": "You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.",
          "Message": "Add HEALTHCHECK instruction in your Dockerfile",
          "Namespace": "builtin.dockerfile.DS026",
          "Query": "data.builtin.dockerfile.DS026.deny",
          "Resolution": "Add HEALTHCHECK instruction in Dockerfile",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ds026",
          "References": [
            "https://blog.aquasec.com/docker-security-best-practices",
            "https://avd.aquasec.com/misconfig/ds026"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Dockerfile",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
